<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<ndbx formatVersion="0.9" type="file">
    <var name="canvasWidth" value="5000.0"/>
    <var name="canvasHeight" value="5000.0"/>
    <node name="PHI" prototype="corevector.geonet" x="580" y="20">
        <param name="color" type="color">
            <value>#b1b7ac5d</value>
        </param>
        <node name="transform1" prototype="corevector.transform" x="500" y="600">
            <param name="tx">
                <value>20.0</value>
            </param>
            <param name="ty">
                <value>-139.0</value>
            </param>
            <param name="sx">
                <value>128.0</value>
            </param>
            <param name="sy">
                <value>116.0</value>
            </param>
        </node>
        <node name="rect2" prototype="corevector.rect" x="240" y="840">
            <param name="x">
                <value>-15.0</value>
            </param>
            <param name="y">
                <value>178.0</value>
            </param>
            <param name="width">
                <value>74.0</value>
            </param>
            <param name="height">
                <value>1106.0</value>
            </param>
        </node>
        <node name="ellipse1" prototype="corevector.ellipse" x="350" y="900">
            <param name="x">
                <value>-15.0</value>
            </param>
            <param name="y">
                <value>732.0</value>
            </param>
            <param name="width">
                <expression>rect2.width</expression>
            </param>
            <param name="height">
                <expression>width</expression>
            </param>
        </node>
        <node name="compound3" prototype="corevector.compound" x="390" y="710"/>
        <node name="compound2" prototype="corevector.compound" x="280" y="610"/>
        <node name="compound1" prototype="corevector.compound" x="140" y="640">
            <param name="function">
                <value>subtracted</value>
            </param>
            <param name="invert_difference">
                <value>1</value>
            </param>
        </node>
        <node name="arc1" prototype="corevector.arc" x="-60" y="660">
            <param name="width">
                <value>1115.0</value>
            </param>
            <param name="height">
                <expression>width</expression>
            </param>
            <param name="start_angle">
                <value>91.0</value>
            </param>
            <param name="degrees">
                <value>64.0</value>
            </param>
        </node>
        <node name="textpath1" prototype="corevector.textpath" x="-30" y="770">
            <param name="text">
                <value>O</value>
            </param>
            <param name="font">
                <value>STIXGeneral-Bold</value>
            </param>
            <param name="size">
                <value>1057.0</value>
            </param>
            <param name="fill">
                <value>#7ab742ff</value>
            </param>
        </node>
        <node name="color1" prototype="corevector.color" rendered="true" x="690" y="630">
            <param name="fill">
                <expression>parent.color</expression>
            </param>
        </node>
        <node name="align2" prototype="corevector.align" x="90" y="780">
            <param name="halign">
                <value>center</value>
            </param>
            <param name="valign">
                <value>middle</value>
            </param>
        </node>
        <conn input="transform1" output="compound3" port="shape"/>
        <conn input="compound3" output="compound2" port="shape"/>
        <conn input="compound3" output="ellipse1" port="shapeB"/>
        <conn input="compound2" output="compound1" port="shape"/>
        <conn input="compound2" output="rect2" port="shapeB"/>
        <conn input="compound1" output="arc1" port="shape"/>
        <conn input="compound1" output="align2" port="shapeB"/>
        <conn input="color1" output="transform1" port="shape"/>
        <conn input="align2" output="textpath1" port="shape"/>
    </node>
    <node name="align1" prototype="corevector.align" x="280" y="60">
        <param name="valign">
            <value>middle</value>
        </param>
    </node>
    <node name="align2" prototype="corevector.align" x="180" y="530">
        <param name="halign">
            <value>none</value>
        </param>
        <param name="valign">
            <value>middle</value>
        </param>
    </node>
    <node name="colors" prototype="corevector.null" x="-120" y="240">
        <param name="color1" type="color">
            <value>#86a8b8ff</value>
        </param>
        <param name="color2" type="color">
            <value>#b59bc4ff</value>
        </param>
        <param name="color3" type="color">
            <value>#d5d5a5ff</value>
        </param>
        <param name="color4" type="color">
            <value>#ddc3b4ff</value>
        </param>
    </node>
    <node name="copy1" prototype="corevector.copy" x="420" y="50">
        <param name="copies">
            <value>2</value>
        </param>
        <param name="r">
            <value>19.0</value>
        </param>
    </node>
    <node name="copy2" prototype="corevector.copy" x="490" y="330">
        <param name="copies">
            <expression>2700 / 100 + 1</expression>
        </param>
        <param name="stamp">
            <value>1</value>
        </param>
        <param name="expr">
            <value>n=CNUM</value>
        </param>
    </node>
    <node name="merge1" prototype="corevector.merge" rendered="true" x="800" y="170"/>
    <node name="philosophs" prototype="corevector.geonet" x="360" y="560">
        <param name="file" type="string" widget="file">
            <value>../data/philo-db/philosophers-Table 1.csv</value>
        </param>
        <node name="person" prototype="corevector.null" x="10" y="550">
            <param name="id" type="int">
                <expression>stamp("persons_value_0", 0)</expression>
            </param>
            <param name="name" type="string">
                <expression>stamp("persons_value_1", "?")</expression>
            </param>
            <param name="from" type="string">
                <expression>stamp("persons_value_2", "")</expression>
            </param>
            <param name="to" type="string">
                <expression>stamp("persons_value_3", "")</expression>
            </param>
            <param name="age" type="int">
                <expression>stamp("persons_value_4", 0)</expression>
            </param>
            <param name="importance" type="int">
                <expression>stamp("persons_value_5", 1)</expression>
            </param>
            <param name="image" type="string">
                <value>0.0</value>
            </param>
            <param name="type" type="int">
                <value>0</value>
            </param>
            <param name="school" type="int">
                <value>0</value>
            </param>
            <param name="angle" type="float">
                <expression>340 * (from - (-1.0 *  700)) / 2700</expression>
            </param>
            <param name="cumul" type="int">
                <expression>stamp("persons_row_index", 1) + 1</expression>
            </param>
        </node>
        <node name="transform2" prototype="corevector.transform" x="270" y="440">
            <param name="tx">
                <expression>math.cos(math.toRadians(person.angle)) * 1400</expression>
            </param>
            <param name="ty">
                <expression>math.sin(math.toRadians(-person.angle)) * 1400</expression>
            </param>
            <param name="r">
                <expression>-person.angle</expression>
            </param>
        </node>
        <node name="ellipse2" prototype="corevector.ellipse" x="190" y="810">
            <port name="p"/>
            <param name="width">
                <value>1.0</value>
            </param>
            <param name="height">
                <value>1.0</value>
            </param>
            <param name="fill">
                <value>#d63e27ff</value>
            </param>
        </node>
        <node name="transform3" prototype="corevector.transform" x="450" y="650">
            <param name="tx">
                <expression>math.cos(math.toRadians(person.angle))  * (ellipse1.width / 2.0 + person.cumul)</expression>
            </param>
            <param name="ty">
                <expression>math.sin(math.toRadians(-person.angle)) * (ellipse1.width / 2.0 + person.cumul)</expression>
            </param>
            <param name="r">
                <expression>-person.angle</expression>
            </param>
        </node>
        <node name="ellipse1" prototype="corevector.ellipse" x="490" y="800">
            <param name="width">
                <value>2800.0</value>
            </param>
            <param name="height">
                <expression>width</expression>
            </param>
            <param name="fill">
                <value>#fdfdfdff</value>
            </param>
            <param name="stroke">
                <value>#828282ff</value>
            </param>
            <param name="strokeWidth">
                <value>1.0</value>
            </param>
        </node>
        <node name="arc1" prototype="corevector.arc" x="600" y="880">
            <param name="width">
                <expression>ellipse1.width + 400</expression>
            </param>
            <param name="height">
                <expression>width</expression>
            </param>
            <param name="degrees">
                <expression>(1938+ 700) / 2700 * 340</expression>
            </param>
        </node>
        <node name="transform4" prototype="corevector.transform" x="290" y="590">
            <param name="tx">
                <expression>math.cos(math.toRadians(-person.angle)) * 1600</expression>
            </param>
            <param name="ty">
                <expression>math.sin(math.toRadians(-person.angle)) * 1600</expression>
            </param>
            <param name="r">
                <expression>-person.angle</expression>
            </param>
        </node>
        <node name="persons" prototype="corevector.datastamp" x="590" y="380">
            <param name="file">
                <expression>parent.file</expression>
            </param>
            <param name="tableName">
                <value>persons</value>
            </param>
        </node>
        <node name="textpath2" prototype="corevector.textpath" x="150" y="640">
            <param name="text">
                <expression>person.name</expression>
            </param>
            <param name="align">
                <value>LEFT</value>
            </param>
            <param name="fill">
                <value>#595959ff</value>
            </param>
        </node>
        <node name="merge1" prototype="corevector.merge" rendered="true" x="780" y="270"/>
        <node name="connect1" prototype="corevector.connect" x="730" y="590">
            <param name="closed">
                <value>0</value>
            </param>
            <param name="fill">
                <value>#fefefeff</value>
            </param>
            <param name="stroke">
                <value>#d88600ff</value>
            </param>
            <param name="strokeWidth">
                <value>2.0</value>
            </param>
        </node>
        <node name="merge2" prototype="corevector.merge" x="440" y="470"/>
        <node name="compound2" prototype="corevector.compound" x="870" y="820">
            <param name="function">
                <value>intersected</value>
            </param>
            <param name="fill">
                <value>#2260913d</value>
            </param>
        </node>
        <node name="compound1" prototype="corevector.compound" x="790" y="730">
            <param name="function">
                <value>subtracted</value>
            </param>
            <param name="fill">
                <value>#b16e00ff</value>
            </param>
        </node>
        <node name="persons1" prototype="corevector.datastamp" x="600" y="570">
            <param name="file">
                <expression>parent.file</expression>
            </param>
            <param name="tableName">
                <value>persons</value>
            </param>
        </node>
        <node name="line1" prototype="corevector.line" x="140" y="470">
            <port name="p"/>
        </node>
        <conn input="merge1" output="persons" port="shapes"/>
        <conn input="transform2" output="line1" port="shape"/>
        <conn input="merge2" output="transform2" port="shapes"/>
        <conn input="merge2" output="transform4" port="shapes"/>
        <conn input="transform4" output="textpath2" port="shape"/>
        <conn input="line1" output="person" port="p"/>
        <conn input="persons" output="merge2" port="shape"/>
        <conn input="transform3" output="ellipse2" port="shape"/>
        <conn input="connect1" output="persons1" port="shape"/>
        <conn input="persons1" output="transform3" port="shape"/>
        <conn input="ellipse2" output="person" port="p"/>
        <conn input="compound1" output="ellipse1" port="shapeB"/>
        <conn input="compound1" output="connect1" port="shape"/>
        <conn input="compound2" output="compound1" port="shape"/>
        <conn input="compound2" output="arc1" port="shapeB"/>
        <conn input="merge1" output="compound2" port="shapes"/>
    </node>
    <node name="rect1" prototype="corevector.rect" x="140" y="50">
        <param name="width">
            <value>1500.0</value>
        </param>
        <param name="height">
            <value>10.0</value>
        </param>
        <param name="rx">
            <value>10.0</value>
        </param>
        <param name="ry">
            <value>10.0</value>
        </param>
        <param name="fill">
            <value>#ca9300ff</value>
        </param>
    </node>
    <node name="ring_1" prototype="corevector.geonet" x="150" y="180">
        <port name="c"/>
        <param name="file" type="string" widget="file">
            <value>../data/philo-db/periods-period1.csv</value>
        </param>
        <param name="width" type="float">
            <value>2000.0</value>
        </param>
        <param name="offangle" type="float">
            <value>340.0</value>
        </param>
        <node name="periods" prototype="corevector.datastamp" rendered="true" x="890" y="170">
            <param name="file">
                <expression>parent.file</expression>
            </param>
            <param name="tableName">
                <value>periods</value>
            </param>
        </node>
        <node name="transform1" prototype="corevector.transform" x="420" y="580">
            <param name="r">
                <expression>-period.middle_angle</expression>
            </param>
        </node>
        <node name="transform2" prototype="corevector.transform" x="290" y="650">
            <param name="tx">
                <expression>math.cos(-math.toRadians(period.middle_angle)) * arc2.width / 2.0</expression>
            </param>
            <param name="ty">
                <expression>math.sin(-math.toRadians(period.middle_angle)) * arc2.width / 2.0</expression>
            </param>
            <param name="r">
                <expression>-period.middle_angle - 90.0</expression>
            </param>
        </node>
        <node name="ellipse2" prototype="corevector.ellipse" x="200" y="520">
            <port name="p"/>
            <param name="x">
                <expression>arc2.width / 2.0 - 50.0</expression>
            </param>
            <param name="width">
                <value>50.0</value>
            </param>
            <param name="height">
                <expression>width</expression>
            </param>
            <param name="fill">
                <value>#00b600ff</value>
            </param>
        </node>
        <node name="textonpath1" prototype="corevector.textonpath" x="570" y="380">
            <param name="text">
                <expression>period.name</expression>
            </param>
            <param name="font">
                <value>Courier-Bold</value>
            </param>
            <param name="size">
                <value>31.0</value>
            </param>
            <param name="start">
                <value>13.0</value>
            </param>
            <param name="loop">
                <value>0</value>
            </param>
            <param name="dy">
                <expression>10</expression>
            </param>
            <param name="keepGeometry">
                <value>0</value>
            </param>
        </node>
        <node name="ellipse3" prototype="corevector.ellipse" x="300" y="450">
            <port name="p"/>
            <param name="width">
                <expression>arc3.width - 50.0</expression>
            </param>
            <param name="height">
                <expression>width</expression>
            </param>
            <param name="fill">
                <value>#00b600ff</value>
            </param>
        </node>
        <node name="ellipse1" prototype="corevector.ellipse" x="280" y="290">
            <param name="width">
                <expression>arc2.width - period.height * 200.0</expression>
            </param>
            <param name="height">
                <expression>width</expression>
            </param>
            <param name="fill">
                <value>#020202ff</value>
            </param>
            <param name="stroke">
                <value>#8d8d8dff</value>
            </param>
        </node>
        <node name="textpath1" prototype="corevector.textpath" x="110" y="590">
            <port name="p"/>
            <param name="text">
                <expression>period.name </expression>
            </param>
            <param name="align">
                <value>LEFT</value>
            </param>
        </node>
        <node name="period" prototype="corevector.null" x="-70" y="310">
            <param name="id" type="int">
                <expression>stamp("periods_value_0",0)</expression>
            </param>
            <param name="from" type="int">
                <expression>stamp("periods_value_1",0)</expression>
            </param>
            <param name="to" type="int">
                <expression>stamp("periods_value_2",0)</expression>
            </param>
            <param name="name" type="string">
                <expression>stamp("periods_value_3","name")</expression>
            </param>
            <param name="parent" type="int">
                <expression>stamp("periods_value_4",0)</expression>
            </param>
            <param name="index" type="int">
                <expression>stamp("periods_row_index",0)</expression>
            </param>
            <param name="duration" type="int">
                <expression>to - from</expression>
            </param>
            <param name="base" type="int">
                <value>2700</value>
            </param>
            <param name="degrees" type="float">
                <expression>parent.offangle * duration / base</expression>
            </param>
            <param name="fromO" type="int">
                <value>-700</value>
            </param>
            <param name="angle" type="float">
                <expression>parent.offangle * (from - fromO) / base</expression>
            </param>
            <param name="middle_angle" type="float">
                <expression>angle + degrees / 2.0</expression>
            </param>
            <param max="2.0" min="1.0" name="height" type="int">
                <expression>stamp("periods_value_5",1)</expression>
            </param>
        </node>
        <node name="arc3" prototype="corevector.arc" x="290" y="370">
            <port name="p"/>
            <param name="width">
                <expression>arc2.width - period.height * 100</expression>
            </param>
            <param name="height">
                <expression>width</expression>
            </param>
            <param name="start_angle">
                <expression>period.middle_angle - 15</expression>
            </param>
            <param name="degrees">
                <expression>30</expression>
            </param>
        </node>
        <node name="arc2" prototype="corevector.arc" x="270" y="190">
            <port name="p"/>
            <param name="width">
                <expression>if (period.height == 1) {parent.width} else {parent.width + 200.0}</expression>
            </param>
            <param name="height">
                <expression>width</expression>
            </param>
            <param name="start_angle">
                <expression>period.angle</expression>
            </param>
            <param name="degrees">
                <expression>period.degrees</expression>
            </param>
        </node>
        <node name="merge1" prototype="corevector.merge" x="660" y="250"/>
        <node name="compound2" prototype="corevector.compound" x="460" y="400">
            <param name="function">
                <value>subtracted</value>
            </param>
            <param name="fill">
                <value>#dd6868ff</value>
            </param>
        </node>
        <node name="compound1" prototype="corevector.compound" x="430" y="230">
            <param name="function">
                <value>subtracted</value>
            </param>
            <param name="fill">
                <expression>[parent.colors.color1,parent.colors.color2,parent.colors.color3,parent.colors.color4][period.id - 1]</expression>
            </param>
        </node>
        <conn input="periods" output="merge1" port="shape"/>
        <conn input="transform1" output="ellipse2" port="shape"/>
        <conn input="transform2" output="textpath1" port="shape"/>
        <conn input="ellipse2" output="period" port="p"/>
        <conn input="textonpath1" output="compound2" port="shape"/>
        <conn input="ellipse3" output="period" port="p"/>
        <conn input="textpath1" output="period" port="p"/>
        <conn input="arc3" output="period" port="p"/>
        <conn input="arc2" output="period" port="p"/>
        <conn input="merge1" output="compound1" port="shapes"/>
        <conn input="merge1" output="textonpath1" port="shapes"/>
        <conn input="compound2" output="arc3" port="shape"/>
        <conn input="compound2" output="ellipse3" port="shapeB"/>
        <conn input="compound1" output="arc2" port="shape"/>
        <conn input="compound1" output="ellipse1" port="shapeB"/>
    </node>
    <node name="ring_2" prototype="corevector.geonet" x="160" y="280">
        <port name="c"/>
        <param name="file" type="string" widget="file">
            <value>../data/philo-db/periods-period2.csv</value>
        </param>
        <param name="width" type="float">
            <value>2200.0</value>
        </param>
        <param name="offangle" type="float">
            <value>340.0</value>
        </param>
        <node name="periods" prototype="corevector.datastamp" rendered="true" x="890" y="170">
            <param name="file">
                <expression>parent.file</expression>
            </param>
            <param name="tableName">
                <value>periods</value>
            </param>
        </node>
        <node name="transform1" prototype="corevector.transform" x="420" y="580">
            <param name="r">
                <expression>-period.middle_angle</expression>
            </param>
        </node>
        <node name="transform2" prototype="corevector.transform" x="290" y="650">
            <param name="tx">
                <expression>math.cos(-math.toRadians(period.middle_angle)) * arc2.width / 2.0</expression>
            </param>
            <param name="ty">
                <expression>math.sin(-math.toRadians(period.middle_angle)) * arc2.width / 2.0</expression>
            </param>
            <param name="r">
                <expression>-period.middle_angle - 90.0</expression>
            </param>
        </node>
        <node name="ellipse2" prototype="corevector.ellipse" x="200" y="520">
            <port name="p"/>
            <param name="x">
                <expression>arc2.width / 2.0 - 50.0</expression>
            </param>
            <param name="width">
                <value>50.0</value>
            </param>
            <param name="height">
                <expression>width</expression>
            </param>
            <param name="fill">
                <value>#00b600ff</value>
            </param>
        </node>
        <node name="textonpath1" prototype="corevector.textonpath" x="570" y="380">
            <param name="text">
                <expression>period.name</expression>
            </param>
            <param name="font">
                <value>Courier-Bold</value>
            </param>
            <param name="size">
                <value>31.0</value>
            </param>
            <param name="start">
                <value>13.0</value>
            </param>
            <param name="loop">
                <value>0</value>
            </param>
            <param name="dy">
                <expression>10</expression>
            </param>
            <param name="keepGeometry">
                <value>0</value>
            </param>
        </node>
        <node name="ellipse3" prototype="corevector.ellipse" x="300" y="450">
            <port name="p"/>
            <param name="width">
                <expression>arc3.width - 50.0</expression>
            </param>
            <param name="height">
                <expression>width</expression>
            </param>
            <param name="fill">
                <value>#00b600ff</value>
            </param>
        </node>
        <node name="ellipse1" prototype="corevector.ellipse" x="280" y="290">
            <port name="p"/>
            <param name="width">
                <expression>arc2.width - period.height * 200.0</expression>
            </param>
            <param name="height">
                <expression>width</expression>
            </param>
            <param name="fill">
                <value>#020202ff</value>
            </param>
            <param name="stroke">
                <value>#8d8d8dff</value>
            </param>
        </node>
        <node name="textpath1" prototype="corevector.textpath" x="110" y="590">
            <port name="p"/>
            <param name="text">
                <expression>period.name </expression>
            </param>
            <param name="align">
                <value>LEFT</value>
            </param>
        </node>
        <node name="period" prototype="corevector.null" x="-70" y="310">
            <param name="id" type="int">
                <expression>stamp("periods_value_0",0)</expression>
            </param>
            <param name="from" type="int">
                <expression>stamp("periods_value_1",0)</expression>
            </param>
            <param name="to" type="int">
                <expression>stamp("periods_value_2",0)</expression>
            </param>
            <param name="name" type="string">
                <expression>stamp("periods_value_3","name")</expression>
            </param>
            <param name="index" type="int">
                <expression>stamp("periods_row_index",0)</expression>
            </param>
            <param name="duration" type="int">
                <expression>to - from</expression>
            </param>
            <param name="base" type="int">
                <value>2700</value>
            </param>
            <param name="degrees" type="float">
                <expression>parent.offangle * duration / base</expression>
            </param>
            <param name="fromO" type="int">
                <value>-700</value>
            </param>
            <param name="angle" type="float">
                <expression>parent.offangle * (from - fromO) / base</expression>
            </param>
            <param name="middle_angle" type="float">
                <expression>angle + degrees / 2.0</expression>
            </param>
            <param max="2.0" min="1.0" name="height" type="int">
                <expression>stamp("periods_value_5",1)</expression>
            </param>
            <param name="parentid" type="int">
                <expression>stamp("periods_value_4",0)</expression>
            </param>
        </node>
        <node name="arc3" prototype="corevector.arc" x="290" y="370">
            <port name="p"/>
            <param name="width">
                <expression>arc2.width - period.height * 100</expression>
            </param>
            <param name="height">
                <expression>width</expression>
            </param>
            <param name="start_angle">
                <expression>period.middle_angle - 15</expression>
            </param>
            <param name="degrees">
                <expression>30</expression>
            </param>
        </node>
        <node name="arc2" prototype="corevector.arc" x="270" y="190">
            <port name="p"/>
            <param name="width">
                <expression>if (period.height == 1) {parent.width} else {parent.width + 200.0}</expression>
            </param>
            <param name="height">
                <expression>width</expression>
            </param>
            <param name="start_angle">
                <expression>period.angle</expression>
            </param>
            <param name="degrees">
                <expression>period.degrees</expression>
            </param>
        </node>
        <node name="merge1" prototype="corevector.merge" x="660" y="250"/>
        <node name="compound2" prototype="corevector.compound" x="460" y="400">
            <param name="function">
                <value>subtracted</value>
            </param>
            <param name="fill">
                <value>#dd6868ff</value>
            </param>
        </node>
        <node name="compound1" prototype="corevector.compound" x="430" y="230">
            <param name="function">
                <value>subtracted</value>
            </param>
            <param name="fill">
                <expression>[parent.colors.color1, parent.colors.color2, parent.colors.color3, parent.colors.color4][period.parentid - 1]</expression>
            </param>
            <param name="strokeWidth">
                <value>1.0</value>
            </param>
        </node>
        <conn input="periods" output="merge1" port="shape"/>
        <conn input="transform1" output="ellipse2" port="shape"/>
        <conn input="transform2" output="textpath1" port="shape"/>
        <conn input="ellipse2" output="period" port="p"/>
        <conn input="textonpath1" output="compound2" port="shape"/>
        <conn input="ellipse3" output="period" port="p"/>
        <conn input="textpath1" output="period" port="p"/>
        <conn input="arc3" output="period" port="p"/>
        <conn input="arc2" output="period" port="p"/>
        <conn input="merge1" output="compound1" port="shapes"/>
        <conn input="merge1" output="textonpath1" port="shapes"/>
        <conn input="compound2" output="arc3" port="shape"/>
        <conn input="compound2" output="ellipse3" port="shapeB"/>
        <conn input="compound1" output="arc2" port="shape"/>
        <conn input="compound1" output="ellipse1" port="shapeB"/>
        <conn input="ellipse1" output="period" port="p"/>
    </node>
    <node name="ring_3" prototype="corevector.geonet" x="100" y="370">
        <port name="c"/>
        <param name="file" type="string" widget="file">
            <value>../data/philo-db/siècles-Table 1.csv</value>
        </param>
        <param name="width" type="float">
            <value>2451.0</value>
        </param>
        <param name="offangle" type="float">
            <value>340.0</value>
        </param>
        <node name="periods" prototype="corevector.datastamp" rendered="true" x="890" y="170">
            <param name="file">
                <expression>parent.file</expression>
            </param>
            <param name="tableName">
                <value>periods</value>
            </param>
        </node>
        <node name="transform2" prototype="corevector.transform" x="450" y="720">
            <param name="tx">
                <expression>math.cos(-math.toRadians(period.middle_angle)) * (arc2.width - 100) / 2.0</expression>
            </param>
            <param name="ty">
                <expression>math.sin(-math.toRadians(period.middle_angle)) * (arc2.width - 100) / 2.0</expression>
            </param>
            <param name="r">
                <expression>-period.middle_angle - 90.0</expression>
            </param>
        </node>
        <node name="ellipse1" prototype="corevector.ellipse" x="280" y="290">
            <param name="width">
                <expression>arc2.width - period.height * 200.0</expression>
            </param>
            <param name="height">
                <expression>width</expression>
            </param>
            <param name="fill">
                <value>#020202ff</value>
            </param>
            <param name="stroke">
                <value>#8d8d8dff</value>
            </param>
        </node>
        <node name="textpath1" prototype="corevector.textpath" x="140" y="700">
            <port name="p"/>
            <param name="text">
                <expression>period.name</expression>
            </param>
            <param name="font">
                <value>Courier-Bold</value>
            </param>
            <param name="size">
                <value>47.0</value>
            </param>
            <param name="fill">
                <value>#171717ff</value>
            </param>
        </node>
        <node name="period" prototype="corevector.null" x="-70" y="310">
            <param name="id" type="int">
                <expression>stamp("periods_value_0",0)</expression>
            </param>
            <param name="from" type="int">
                <expression>stamp("periods_value_1",0)</expression>
            </param>
            <param name="to" type="int">
                <expression>stamp("periods_value_2",0)</expression>
            </param>
            <param name="name" type="string">
                <expression>stamp("periods_value_3","name")</expression>
            </param>
            <param name="index" type="int">
                <expression>stamp("periods_row_index",0)</expression>
            </param>
            <param name="duration" type="int">
                <expression>to - from</expression>
            </param>
            <param name="base" type="int">
                <value>2700</value>
            </param>
            <param name="degrees" type="float">
                <expression>parent.offangle * duration / base</expression>
            </param>
            <param name="fromO" type="int">
                <value>-700</value>
            </param>
            <param name="angle" type="float">
                <expression>parent.offangle * (from - fromO) / base</expression>
            </param>
            <param name="middle_angle" type="float">
                <expression>angle + degrees / 2.0</expression>
            </param>
            <param max="2.0" min="1.0" name="height" type="int">
                <expression>stamp("periods_value_5",1)</expression>
            </param>
            <param name="parentid" type="int">
                <expression>stamp("periods_value_4",0)</expression>
            </param>
        </node>
        <node name="arc2" prototype="corevector.arc" x="270" y="190">
            <port name="p"/>
            <param name="width">
                <expression>if (period.height == 1) {parent.width} else {parent.width + 200.0}</expression>
            </param>
            <param name="height">
                <expression>width</expression>
            </param>
            <param name="start_angle">
                <expression>period.angle</expression>
            </param>
            <param name="degrees">
                <expression>period.degrees</expression>
            </param>
        </node>
        <node name="merge1" prototype="corevector.merge" x="710" y="190"/>
        <node name="compound1" prototype="corevector.compound" x="430" y="230">
            <param name="function">
                <value>subtracted</value>
            </param>
            <param name="fill">
                <expression>[parent.colors.color1, parent.colors.color2, parent.colors.color3, parent.colors.color4][period.parentid - 1]</expression>
            </param>
            <param name="strokeWidth">
                <value>1.0</value>
            </param>
        </node>
        <conn input="periods" output="merge1" port="shape"/>
        <conn input="transform2" output="textpath1" port="shape"/>
        <conn input="textpath1" output="period" port="p"/>
        <conn input="arc2" output="period" port="p"/>
        <conn input="merge1" output="compound1" port="shapes"/>
        <conn input="compound1" output="arc2" port="shape"/>
        <conn input="compound1" output="ellipse1" port="shapeB"/>
        <conn input="merge1" output="transform2" port="shapes"/>
    </node>
    <node name="textpath1" prototype="corevector.textpath" x="50" y="570">
        <param name="text">
            <expression>-700 + stamp("n", 0) * 100</expression>
        </param>
        <param name="font">
            <value>ArialMT</value>
        </param>
        <param name="size">
            <value>30.0</value>
        </param>
        <param name="x">
            <value>1283.0</value>
        </param>
    </node>
    <node name="transform1" prototype="corevector.transform" x="310" y="450">
        <param name="r">
            <expression>-340 * stamp("n", 0) * 100.0 / 2700.0</expression>
        </param>
    </node>
    <conn input="merge1" output="philosophs" port="shapes"/>
    <conn input="merge1" output="ring_1" port="shapes"/>
    <conn input="merge1" output="ring_2" port="shapes"/>
    <conn input="merge1" output="ring_3" port="shapes"/>
    <conn input="merge1" output="PHI" port="shapes"/>
    <conn input="merge1" output="copy2" port="shapes"/>
    <conn input="align1" output="rect1" port="shape"/>
    <conn input="copy1" output="align1" port="shape"/>
    <conn input="copy2" output="transform1" port="shape"/>
    <conn input="align2" output="textpath1" port="shape"/>
    <conn input="transform1" output="align2" port="shape"/>
    <conn input="ring_1" output="colors" port="c"/>
    <conn input="ring_2" output="colors" port="c"/>
    <conn input="ring_3" output="colors" port="c"/>
</ndbx>
